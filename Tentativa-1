from tkinter import Tk, Frame, Label, Entry, Button
import speech_recognition as sr
import webbrowser
import pyautogui
import datetime
import pyttsx3
import time
import sys
def time_2():
    time.sleep(2)
def time_3():
    time.sleep(3)
def time_5():
    time.sleep(5)
def Chat_voz():
    #Habilita o microfone para ouvir o usuario
    microfone = sr.Recognizer()
    maquina = pyttsx3.init()
    concluido = False
    Opera_aberto = False
    while True:
        class EncerrarTodosOsLoops(Exception):
            pass
        with sr.Microphone() as source:
            # Chama a funcao de reducao de ruido disponivel na speech_recognition
            microfone.adjust_for_ambient_noise(source)
            # Avisa ao usuario que esta pronto para ouvir
            print("Diga alguma coisa: ")
            # Armazena a informacao de audio na variavel
            audio = microfone.listen(source)
        try:
            # Passa o audio para o reconhecedor de padroes do speech_recognition
            frase = microfone.recognize_google(audio, language='pt-BR')
            # Após alguns segundos, retorna a frase falada;
            print("Você disse: " + frase)
            if "darling" in frase:
                comando = frase.replace('darling', '')
                maquina.say(comando)
                maquina.runAndWait()
                while True:
                    with sr.Microphone() as source:
                        microfone.adjust_for_ambient_noise(source)
                        if concluido == False:
                            print("Oque você deseja pesquisar? ")
                            maquina.say("O que você deseja?:")
                        elif concluido == True:
                            maquina.say("Deseja mais alguma coisa:")
                        maquina.runAndWait()
                        audio = microfone.listen(source)
                    try:
                        frase_2 = microfone.recognize_google(audio, language='pt-BR')
                        print("Ultimo comando dado " + frase_2)
                        if 'horas' in frase_2:
                            hora = datetime.datetime.now().strftime('%H:%M')
                            maquina.say("Agora são" + hora)
                            maquina.runAndWait()
                        if "spotify" in frase_2.lower():
                            pyautogui.hotkey("win", "s")  # Ativa a barra de pesquisa do Windows
                            time.sleep(2)
                            pyautogui.write("spotify")
                            time.sleep(2)
                            pyautogui.press("enter")
                            time.sleep(10)
                            maquina.say("Processando...")
                            maquina.runAndWait()
                            try:
                                pyautogui.hotkey("ctrl", "l")
                                time.sleep(2)
                            except Exception as e:
                                print(f"Erro ao pressionar Ctrl+L: {e}")
                            if any(keyword in frase_2.lower() for keyword in ["busque", "buscar por", "procurar por", "busque por", "procure por"]):
                                termos = ["busque", "buscar por", "procurar por", "procure por", "busque por", "spotify","abrir"]
                                termo_encontrado = next((termo for termo in termos if termo in frase_2.lower()), None)
                                procurar = frase_2
                                procurar = procurar.replace(termo_encontrado, '')
                                try:
                                    pyautogui.write(procurar)
                                    time.sleep(2)
                                    pyautogui.press("enter")
                                    maquina.say("Busca por música finalizada")
                                    maquina.runAndWait()
                                    break
                                except Exception as e:
                                    print(f"Erro ao escrever na barra de endereço: {e}")
                        if "bloco de anotação" in frase_2.lower() or "keep" in frase_2.lower():
                            pyautogui.click(x=-500, y=48)
                            time.sleep(2)
                            pyautogui.hotkey("ctrl", "t")
                            time.sleep(2)
                            pyautogui.write("https://keep.google.com/u/0/#home")
                            time.sleep(1.9)
                            pyautogui.press("enter")
                            time.sleep(2.5)
                            pyautogui.click(x=-667, y=-163)
                            if any(keyword in frase_2.lower() for keyword in ["busque", "procure por", "busque por", "procurar por"]):
                                termos = ["busque", "buscar por", "procurar por", "procure por", "busque por",
                                          "bloco de anotação", "bloco de anotao", "keep", "abrir"]
                                termo_encontrado = next((termo for termo in termos if termo in frase_2.lower()), None)
                                procurar = frase_2.replace(termo_encontrado, '')
                                pyautogui.doubleClick(x=-661, y=-159)
                                time.sleep(2)
                                pyautogui.write(procurar)
                                time.sleep(2)
                                pyautogui.press("enter")
                                maquina.say("Busca finalizada")
                                time.sleep(2)
                                maquina.say("Fale o que você deseja adicionar à anotação!")
                                maquina.runAndWait()
                                while True:
                                    with sr.Microphone() as source:
                                        microfone.adjust_for_ambient_noise(source)
                                        audio = microfone.listen(source)
                                    try:
                                        pyautogui.click(x=-508, y=-81)
                                        print("Fale o que deseja adicionar a antotação:")
                                        frase_22 = microfone.recognize_google(audio, language='pt-BR')
                                        pyautogui.click(x=-532, y=105)
                                        time.sleep(1.5)
                                        pyautogui.hotkey("ctrl", "a")
                                        time.sleep(1)
                                        pyautogui.hotkey("down")
                                        pyautogui.write(frase_22)
                                        maquina.say("Anotação adicionada")
                                        maquina.runAndWait()
                                        break
                                    except sr.UnknownValueError:
                                        maquina.say("Não foi possível entender o áudio")
                                        maquina.runAndWait()
                                    except Exception as e:
                                        print(f"Erro inesperado: {e}")
                                    finally:
                                        maquina.say("Processando")
                                        maquina.runAndWait()
                        if Opera_aberto == False:
                            if any(keyword in frase_2.lower() for keyword in ["opera", "ópera", "opera gx", "google"]):
                                pyautogui.press("win")
                                if any(keyword in frase_2.lower() for keyword in ["opera", "ópera", "opera gx"]):
                                    pyautogui.write("opera")
                                    Opera_aberto = True
                                elif "google" in frase_2.lower():
                                    pyautogui.write("Google")
                                time.sleep(1.9)
                                pyautogui.press("enter")
                                time.sleep(1.5)
                                pyautogui.press("Ctrl" + "L")
                                time.sleep(2.5)
                                if "youtube" in frase_2.lower():
                                    pyautogui.write("YouTube")
                                    time.sleep(1.9)
                                    pyautogui.press("enter")
                                    time.sleep(4.5)
                                    while concluido is False:
                                        with sr.Microphone() as source:
                                            microfone.adjust_for_ambient_noise(source)
                                            print("Qual video você deseja ver?")
                                            maquina.say("Qual video você deseja ver?")
                                            maquina.runAndWait()
                                            audio = microfone.listen(source)
                                            time.sleep(2)
                                        try:
                                            frase_3 = microfone.recognize_google(audio, language='pt-BR')
                                            pyautogui.click(-570, -158)
                                            if any(keyword in frase_3.lower() for keyword in ["procurar vídeo", "procurar por", "procure vídeo"]):
                                                if termo in ["procurar vídeo", "procurar por", "procure vídeo"]:
                                                    pyautogui.click(-570, -158)
                                                    procurar = frase_3.replace(termo,'')
                                                    pyautogui.write(procurar)
                                                    time.sleep(1.9)
                                                    pyautogui.press("enter")
                                                    concluido = True
                                                    break
                                            else:
                                                procurar = frase_3
                                                pyautogui.write(procurar)
                                                time.sleep(1.9)
                                                pyautogui.press("enter")
                                                concluido = True
                                                break
                                        except Exception as e:
                                            print(f"Erro inesperado: {e}")
                                        finally:
                                            print("Executando código no bloco finally(3).")
                        elif Opera_aberto == True:
                            if any(keyword in frase_2.lower() for keyword in ["faça uma pesquisa", "busque", "pesquise"]):
                                if termo in ['faça uma pesquisa', 'busque', 'pesquise']:
                                    procurar = frase_2.replace(termo, '')
                                    pesquisa_url = f"https://www.google.com/search?q={'+'.join(procurar.split())}"
                                    webbrowser.open(pesquisa_url)
                                    concluido = True
                        elif any(keyword in frase_2.lower() for keyword in ["Não","Nao","encerrar", "encerre"]):
                            print("===" * 10)
                            print("Finalizando programa")
                            raise EncerrarTodosOsLoops
                            sys.exit()
                    except Exception as e:
                        print(f"Erro inesperado: {e}")
                    finally:
                        print("Executando comando(2).")
        except Exception as e:
            print(f"Erro inesperado: {e}")
        except EncerrarTodosOsLoops:
            print("Encerrando todos os loops.")
        finally:
            print("Executando comando(1).")
def calculadora():
    pyautogui.hotkey("win", "s")
    time.sleep(2)
    pyautogui.write("Calculcadora")
    time.sleep(2)
    pyautogui.press("enter")
def discord():
    pyautogui.hotkey("win", "s")
    time.sleep(2)
    pyautogui.write("Discord")
    time.sleep(2)
    pyautogui.press("enter")
def steam():
    pyautogui.hotkey("win", "s")
    time.sleep(2)
    pyautogui.write("Steam")
    time.sleep(2)
    pyautogui.press("enter")
class Grid(Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.master.title("Painel")
        self.master.geometry("200x100")

        self.entrada1 = Entry(self.master)
        self.resultado_label = Label(self.master, text="Resultado:")
        self.resultado_var = Label(self.master, text="")

        self.entrada1 = Entry(self.master)
        self.entrada2 = Entry(self.master)

        Label(self.master, text="Pesquisa:").grid(row=0)
        Label(self.master, text="Resultado:").grid(row=1)
        self.resultado_label.grid(row=1, sticky="w", padx=5)
        self.entrada1.grid(row=0, column=1, padx=5)
        self.resultado_var.grid(row=1, column=1, padx=5)

        Button(self.master, text="Procurar",command=self.Iniciar).grid(row=2, column=1)

        self.entrada1.grid(row=0, column=1)
        self.entrada2.grid(row=1, column=1)

    def Iniciar(self):
        pesquisa = self.entrada1.get().lower()
        comandos = {"chat_voz": Chat_voz, "calculadora": calculadora, "discord": discord, "steam": steam,
                    "sair": sys.exit}
        resultado = comandos.get(pesquisa, lambda: print("Comando não reconhecido"))()
        self.resultado_var.config(text=resultado)
root = Tk()
Grid(master=root).mainloop()
